#BlueJ class context
comment0.params=
comment0.target=void\ imageClean()
comment1.params=noeud
comment1.target=void\ imageDrawNode(DrawTree.DrawNode)
comment10.params=width
comment10.target=int\ setNodeWidth(int)
comment10.text=\r\n\ D\u00E9finis\ la\ largeur\ du\ rectangle\ d'un\ node\r\n\ Si\ le\ param\u00E8tre\ est\ -1,\ ne\ change\ rien\ (renvoie\ juste\ la\ valeur\ actuelle)\r\n
comment11.params=height
comment11.target=int\ setNodeHeight(int)
comment11.text=\r\n\ D\u00E9finis\ la\ hauteur\ du\ rectangle\ d'un\ node\r\n\ Si\ le\ param\u00E8tre\ est\ -1,\ ne\ change\ rien\ (renvoie\ juste\ la\ valeur\ actuelle)\r\n
comment12.params=newColor
comment12.target=java.awt.Color\ setBkgColor(java.awt.Color)
comment12.text=\r\n\ Permet\ de\ changer\ la\ couleur\ de\ font\ des\ images\r\n\ Si\ le\ param\u00E8tre\ est\ null,\ aucun\ changement\ (renvoie\ juste\ la\ couleur\ actuelle)\r\n
comment13.params=newColor
comment13.target=java.awt.Color\ setDefaultColor(java.awt.Color)
comment13.text=\r\n\ Permet\ de\ changer\ la\ couleur\ d'\u00E9citure\ dans\ les\ images\r\n\ Si\ le\ param\u00E8tre\ est\ null,\ aucun\ changement\ (renvoie\ juste\ la\ couleur\ actuelle)\r\n
comment14.params=newColor
comment14.target=java.awt.Color\ setAltColor(java.awt.Color)
comment14.text=\r\n\ Permet\ de\ changer\ la\ couleur\ secondaire\ (principalement\ utilis\u00E9e\ pour\ les\ red-black)\r\n\ Si\ le\ param\u00E8tre\ est\ null,\ aucun\ changement\ (renvoie\ juste\ la\ couleur\ actuelle)\r\n
comment15.params=transparent
comment15.target=boolean\ setTransparentBackground(boolean)
comment2.params=file
comment2.target=boolean\ saveImage(java.lang.String)
comment2.text=\r\n\ Enregistre\ l'image\ dans\ le\ fichier\ \r\n\ Ne\ peut\ \u00EAtre\ que\ en\ PNG\r\n\ Retourne\ true\ si\ pas\ d'erreur\r\n
comment3.params=info
comment3.target=void\ addInfo(java.lang.String)
comment3.text=\r\n\ Ajoute\ une\ ligne\ d'infos\ dans\ la\ console\ de\ gauche\r\n
comment4.params=tree\ transparent\ youWantTheView
comment4.target=DrawTree(DrawableTree,\ boolean,\ boolean)
comment4.text=\r\n\ Constructeur\r\n\ \r\n\ Stocke\ l'arbre\ \u00E0\ afficher,\ cr\u00E9e\ la\ frame,\ et\ appelle\ refresh()\ pour\ afficher\r\n
comment5.params=tree\ transparent
comment5.target=DrawTree(DrawableTree,\ boolean)
comment6.params=tree
comment6.target=DrawTree(DrawableTree)
comment7.params=
comment7.target=void\ view()
comment8.params=
comment8.target=void\ refresh()
comment8.text=\r\n\ Raffraichit\ l'affichage\ de\ l'arbre\r\n\ Est\ utile\ pour\ soit\ l'afficher\ une\ premi\uFFFDre\ fois\ soit\ pour\ le\ mettre\ \uFFFD\ jour\ apr\uFFFDs\ qu'il\ ait\ \uFFFDt\uFFFD\ modifi\uFFFD\r\n
comment9.params=runner\ line\ index\ parent
comment9.target=void\ addNode(DrawableNode,\ int,\ int,\ DrawTree.DrawNode)
comment9.text=\r\n\ Ajoute\ une\ node\r\n\ Va\ transformer\ une\ node\ telle\ que\ d\u00E9finie\ dans\ le\ tree\ en\ node\ telle\ que\ nous\ on\ les\ aime\ (\u00E0\ savoir\ avec\ leur\ position,\ ...)\r\n\ line\ repr\u00E9sente\ la\ ligne.\ \r\n\ Pour\ index\ voir\ r\u00E9ponse\ ici\ \:\ http\://stackoverflow.com/questions/14184655/set-position-for-drawing-binary-tree\r\n
numComments=16
